version: '3.8'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=hadoop-cluster
    ports:
      - "9870:9870"     # HDFS Web UI
      - "9000:9000"     # HDFS defaultFS
    volumes:
      - namenode_data:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    depends_on:
      - namenode
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - datanode_data:/hadoop/dfs/data

  spark-master:
    image: bitnami/spark:3.4.2
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"     # Spark master port
      - "8080:8080"     # Spark master UI

  spark-worker:
    image: bitnami/spark:3.4.2
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8081:8081"     # Spark worker UI

  spark-submit:
    image: bitnami/spark:3.4.2
    container_name: spark-submit
    depends_on:
      - spark-master
      - namenode
    volumes:
      - ./jobs:/opt/spark/jobs     # Contient ton script Spark
      - ./data:/opt/spark/data     # Contient les CSV Ã  envoyer dans HDFS
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "
      sleep 10 &&
      hdfs dfs -mkdir -p /input &&
      hdfs dfs -put -f /opt/spark/data/*.csv /input/ &&
      /opt/bitnami/spark/bin/spark-submit
      --master spark://spark-master:7077
      --deploy-mode client
      /opt/spark/jobs/process_csv.py
      && tail -f /dev/null
      "

  react-app:
    container_name: react-app
    build:
      context: ./Webapp
      dockerfile: Dockerfile
    ports:
      - "5173:5173"     # Vite dev server or serve
    volumes:
      - ./Webapp:/app
    depends_on:
      - spark-master

volumes:
  namenode_data:
  datanode_data:
